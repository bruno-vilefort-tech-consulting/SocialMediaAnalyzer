import { initializeApp, cert } from 'firebase-admin/app';
import { getFirestore } from 'firebase-admin/firestore';
import { readFileSync } from 'fs';

// Inicializar Firebase Admin
const serviceAccount = JSON.parse(readFileSync('./firebase-service-account.json', 'utf8'));
initializeApp({
  credential: cert(serviceAccount),
  projectId: process.env.VITE_FIREBASE_PROJECT_ID
});

const db = getFirestore();

async function deletarUsuariosGrupoMaximus() {
  try {
    console.log('üîç Buscando usu√°rios do cliente Grupo Maximus (ID: 1749849987543)...');
    
    // Buscar todos os usu√°rios do cliente espec√≠fico
    const clientUsersRef = db.collection('clientUsers');
    const snapshot = await clientUsersRef.where('clientId', '==', 1749849987543).get();
    
    if (snapshot.empty) {
      console.log('‚úÖ Nenhum usu√°rio encontrado para o cliente Grupo Maximus');
      return;
    }
    
    console.log(`üìã Encontrados ${snapshot.size} usu√°rio(s) para deletar:`);
    
    const batch = db.batch();
    snapshot.docs.forEach((doc) => {
      const userData = doc.data();
      console.log(`- Usu√°rio: ${userData.name} (${userData.email}) - ID: ${doc.id}`);
      batch.delete(doc.ref);
    });
    
    // Executar dele√ß√£o em batch
    await batch.commit();
    console.log(`‚úÖ ${snapshot.size} usu√°rio(s) deletado(s) com sucesso do cliente Grupo Maximus!`);
    
  } catch (error) {
    console.error('‚ùå Erro ao deletar usu√°rios:', error);
  }
}

deletarUsuariosGrupoMaximus();