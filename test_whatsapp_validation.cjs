// Script para testar a valida√ß√£o bidirecional de n√∫meros WhatsApp
const fetch = require('node-fetch');

// Token do usu√°rio bruno.claro@yahoo.com
const token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjE3NTEzODUwNzUxNTkiLCJlbWFpbCI6ImJydW5vLmNsYXJvQHlhaG9vLmNvbSIsInJvbGUiOiJjbGllbnQiLCJjbGllbnRJZCI6MTc0OTg0OTk4NzU0MywiaWF0IjoxNzUyODE4MTE0fQ.pJ_oeHYWW2GDq8OQR6eXcxM3KlI1WKUCh6qI1FG1Gqs";

async function testBidirectionalValidation() {
  console.log('üß™ [TESTE] Iniciando testes de valida√ß√£o bidirecional WhatsApp\n');

  // N√∫meros de teste para validar as diferentes estrat√©gias
  const testNumbers = [
    {
      description: "N√∫mero com 9¬∫ d√≠gito (novo formato)",
      phone: "5511987654321",
      expected: "Deve testar: original, sem 9, com 9"
    },
    {
      description: "N√∫mero sem 9¬∫ d√≠gito (formato antigo MG)",  
      phone: "553187654321",
      expected: "Deve testar: original, sem 9, com 9"
    },
    {
      description: "N√∫mero real para teste", 
      phone: "5531991505564",
      expected: "Deve encontrar vers√£o v√°lida se existir"
    },
    {
      description: "N√∫mero sem c√≥digo do pa√≠s",
      phone: "11987654321", 
      expected: "Deve adicionar 55 e testar todas varia√ß√µes"
    }
  ];

  for (const test of testNumbers) {
    console.log(`üì± [TESTE] ${test.description}`);
    console.log(`   N√∫mero: ${test.phone}`);
    console.log(`   Expectativa: ${test.expected}`);
    
    try {
      const response = await fetch('http://localhost:5000/api/whatsapp/validate-number', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ phone: test.phone })
      });
      
      const result = await response.json();
      
      if (response.ok) {
        if (result.isValid) {
          console.log(`   ‚úÖ V√ÅLIDO: ${result.validatedNumber} (testado: ${result.testedNumber})`);
        } else {
          console.log(`   ‚ùå INV√ÅLIDO: ${result.error}`);
          if (result.testedNumbers) {
            console.log(`   üîç N√∫meros testados: ${result.testedNumbers.join(', ')}`);
          }
        }
      } else {
        console.log(`   ‚ö†Ô∏è ERRO HTTP ${response.status}: ${result.error || 'Erro desconhecido'}`);
      }
      
    } catch (error) {
      console.log(`   üí• ERRO DE REDE: ${error.message}`);
    }
    
    console.log(''); // Linha em branco entre testes
  }
  
  console.log('üéâ [TESTE] Valida√ß√£o bidirecional conclu√≠da!');
  console.log('\nüìä [AN√ÅLISE] Verifica√ß√µes implementadas:');
  console.log('   ‚úì Adiciona c√≥digo do pa√≠s (55) se necess√°rio');
  console.log('   ‚úì Testa n√∫mero original');
  console.log('   ‚úì Remove 9¬∫ d√≠gito (n√∫meros antigos MG)');
  console.log('   ‚úì Adiciona 9¬∫ d√≠gito (n√∫meros novos)');
  console.log('   ‚úì Remove duplicatas');
  console.log('   ‚úì Valida cada candidato via Baileys onWhatsApp()');
  console.log('   ‚úì Retorna primeiro n√∫mero v√°lido encontrado');
}

// Executar teste
testBidirectionalValidation().catch(console.error);