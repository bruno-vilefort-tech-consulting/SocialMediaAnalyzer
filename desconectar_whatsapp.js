import { FirebaseStorage } from './server/storage.ts';

async function desconectarWhatsApp() {
  console.log('üîå Desconectando WhatsApp e limpando dados...');
  
  const storage = new FirebaseStorage();
  
  try {
    // Buscar todas as configura√ß√µes com WhatsApp conectado
    const configs = await storage.getAllApiConfigs();
    
    for (const config of configs) {
      if (config.whatsappQrConnected) {
        console.log(`üì± Desconectando WhatsApp da config: ${config.entityType}/${config.entityId}`);
        
        // Atualizar configura√ß√£o para desconectado
        await storage.updateApiConfig(config.entityType, config.entityId, {
          whatsappQrConnected: false,
          whatsappQrPhoneNumber: null,
          whatsappQrLastConnection: null
        });
        
        console.log(`‚úÖ WhatsApp desconectado para ${config.entityType}/${config.entityId}`);
      }
    }
    
    console.log('üßπ Limpando sess√µes do diret√≥rio whatsapp-sessions...');
    
  } catch (error) {
    console.error('‚ùå Erro ao desconectar WhatsApp:', error);
  }
}

desconectarWhatsApp().then(() => {
  console.log('‚úÖ Desconex√£o conclu√≠da');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå Erro na desconex√£o:', error);
  process.exit(1);
});