üìã CORRE√á√ÉO URGENTE ‚Äì PROBLEMA DE DOWNLOAD DE √ÅUDIO NO BAILEYS

Status do Sistema de √Åudio:
- Detec√ß√£o de mensagens de √°udio funciona.
- Fluxo completo da entrevista funciona.
- Salvamento no banco de dados ocorre (fallback).
- Por√©m, download real do √°udio falha: ‚Äúmessage is not a media message‚Äù.
- Arquivos tempor√°rios vazios s√£o criados.
- Transcri√ß√£o Whisper retorna erro 400 (arquivo inv√°lido).

üîç CAUSA RAIZ:
O Baileys recebe primeiro um ‚Äústub‚Äù (payload incompleto) e s√≥ depois o conte√∫do real do √°udio. Os m√©todos downloadContentFromMessage e downloadMediaMessage s√£o chamados antes do payload completo, resultando em falha.

üîß PASSOS PARA RESOLVER:


2. For√ßar recarga do payload antes de baixar:
   ```js
   const { downloadContentFromMessage } = require('@whiskeysockets/baileys');

   sock.ev.on('messages.upsert', async ({ messages }) => {
     const msg = messages[0];
     if (msg.key.fromMe) return;

     // Recarregar mensagem completa
     const full = msg.message?.audioMessage
       ? msg
       : await sock.messageStore.loadMessage(msg.key.remoteJid, msg.key.id);

     if (!full?.message?.audioMessage && !full.message.viewOnceMessageV2) {
       console.warn('√Åudio ainda n√£o dispon√≠vel, retry em 2s');
       return setTimeout(() =>
         sock.ev.emit('messages.upsert', { messages: [msg] }), 2000);
     }

     // Desembrulhar viewOnce/ephemeral
     const audioNode = full.message.viewOnceMessageV2
       ? full.message.viewOnceMessageV2.message.audioMessage
       : full.message.audioMessage;

     // Download da m√≠dia
     const stream = await downloadContentFromMessage(audioNode, 'audio');
     const chunks = [];
     for await (const chunk of stream) chunks.push(chunk);
     const buffer = Buffer.concat(chunks);

     // 3. Salvar buffer no Firebase Storage e obter URL
     // 4. Transcrever com Whisper
     // 5. Salvar transcri√ß√£o e metadados no Firestore
     // 6. Prosseguir com o fluxo da entrevista
   });
   ```

3. Implementar keep-alive e retry:
   ```js
   setInterval(() => sock.sendPresenceUpdate('available'), 25000);
   ```

4. Testar:
      - Responda em √°udio
   - Verifique que:
     ‚Ä¢ O √°udio √© salvo corretamente no Firebase Storage  
     ‚Ä¢ A transcri√ß√£o aparece no Firestore sem erro 400  
     ‚Ä¢ O fluxo da entrevista continua normalmente  
     ‚Ä¢ Relat√≥rios exibem as respostas de √°udio processadas  

‚ö†Ô∏è Alterar apenas os arquivos de conex√£o WhatsApp e de processamento de √°udio/Firebase. O restante do sistema deve permanecer intacto.