
üìã Requisito do M√≥dulo de Entrevista via WhatsApp

Objetivo:
Criar um m√≥dulo de entrevista autom√°tica via WhatsApp, utilizando a API oficial da Meta (Cloud API), Firebase, TTS da OpenAI (voz natural) e Whisper para transcri√ß√£o de √°udio. O sistema j√° tem os seguintes recursos prontos e configurados:

- Banco de dados Firebase com:
  - Lista de candidatos: { nome, numeroWhatsapp }
  - Vagas com at√© 10 perguntas: { nomeVaga, perguntas[1...10] }
  - Mensagem inicial padr√£o
- API do WhatsApp Business (Meta Cloud API): ser√° configurada
- API do Whisper da OpenAI: j√° configurada
- API do TTS da OpenAI: j√° configurada
- Firebase Firestore e Storage: j√° integrados

üîß Funcionalidade esperada:

1. O admin clica em "Sele√ß√µes" e seleciona:
   - A vaga (que cont√©m as perguntas)
   - A lista de candidatos (com nome e WhatsApp)
   - A mensagem inicial
   - A op√ß√£o: enviar agora ou agendar o envio

2. O sistema dispara mensagens no WhatsApp via Meta Cloud API, com:
   - A mensagem inicial personalizada com nome do candidato
   - Dois bot√µes interativos:
     - "Quero fazer entrevista"
     - "N√£o quero fazer entrevista"

3. Se o candidato clicar em "N√£o quero fazer entrevista":
   - O sistema salva a recusa no banco de dados e encerra.

4. Se clicar em "Quero fazer entrevista", o sistema:
   - Envia √°udio TTS com sauda√ß√£o personalizada: "Ol√°, [nome]. Vamos come√ßar sua entrevista."
   - Inicia a entrevista com a primeira pergunta (texto + TTS em √°udio)

üîÅ L√≥gica da entrevista:

- O candidato responde com √°udio.
- O sistema:
  - Salva o √°udio no Firebase Storage
  - Converte para texto com Whisper
  - Salva no Firestore com os dados:
    {
      nome: "Fulano",
      numero: "5511999999999",
      pergunta: "Conte sobre sua experi√™ncia.",
      respostaAudioUrl: "link_do_audio",
      respostaTexto: "Trabalhei por 5 anos em...",
      numeroDaPergunta: 1
    }
- O sistema ent√£o envia a pr√≥xima pergunta, e repete at√© a √∫ltima.

üü¢ Fim da entrevista:

- Ap√≥s a √∫ltima pergunta, o sistema envia √°udio TTS de encerramento:
  "Obrigado, [nome]. Sua entrevista foi finalizada. Em breve voc√™ receber√° o resultado. At√© logo!"

üõ†Ô∏è O que deve ser implementado:

- Integra√ß√£o com Meta Cloud API (com envio, recebimento, bot√µes e webhook)
- L√≥gica para progredir nas perguntas
- Tratamento de √°udio recebido, com:
  - Salvamento no Firebase Storage
  - Transcri√ß√£o via Whisper
  - Grava√ß√£o estruturada no Firestore
- Suporte a envio imediato ou agendamento
- Tratamento completo dos fluxos de sim/n√£o
- Valida√ß√£o do progresso do candidato

‚öôÔ∏è Tecnologias utilizadas:
- Replit (backend Python ou Node.js)
- Firebase (Firestore + Storage)
- Meta Cloud API (WhatsApp Business)
- OpenAI TTS + Whisper
