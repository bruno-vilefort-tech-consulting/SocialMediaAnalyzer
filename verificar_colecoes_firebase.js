import { initializeApp } from 'firebase/app';
import { getFirestore, collection, getDocs } from 'firebase/firestore';

// Configura√ß√£o do Firebase
const firebaseConfig = {
  apiKey: process.env.VITE_FIREBASE_API_KEY,
  authDomain: `${process.env.VITE_FIREBASE_PROJECT_ID}.firebaseapp.com`,
  projectId: process.env.VITE_FIREBASE_PROJECT_ID,
  storageBucket: `${process.env.VITE_FIREBASE_PROJECT_ID}.firebasestorage.app`,
  appId: process.env.VITE_FIREBASE_APP_ID,
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

async function verificarColecoesFirebase() {
  try {
    console.log('üîç Verificando cole√ß√µes no Firebase...');
    
    // Lista das cole√ß√µes que esperamos encontrar
    const colecoesEsperadas = [
      'clients',
      'jobs', 
      'candidates',
      'selections',
      'interviews',
      'responses',
      'candidateLists',
      'clientUsers',
      'apiConfigs', // Esta √© a √∫nica tabela de configura√ß√£o no schema
      'clientVoiceSettings'
    ];
    
    // Verificar tamb√©m poss√≠veis varia√ß√µes de config
    const possiveisConfigs = [
      'config',
      'configs', 
      'apiConfig',
      'apiConfigs',
      'configurations',
      'settings'
    ];
    
    console.log('\nüìä Verificando cole√ß√µes esperadas:');
    for (const colecao of colecoesEsperadas) {
      try {
        const snapshot = await getDocs(collection(db, colecao));
        console.log(`‚úÖ ${colecao}: ${snapshot.size} documentos`);
      } catch (error) {
        console.log(`‚ùå ${colecao}: N√£o encontrada ou erro`);
      }
    }
    
    console.log('\nüîç Verificando poss√≠veis duplica√ß√µes de config:');
    for (const colecao of possiveisConfigs) {
      try {
        const snapshot = await getDocs(collection(db, colecao));
        if (snapshot.size > 0) {
          console.log(`‚ö†Ô∏è  ${colecao}: ${snapshot.size} documentos encontrados`);
          snapshot.forEach(doc => {
            console.log(`   - ID: ${doc.id}, dados: ${JSON.stringify(doc.data(), null, 2).substring(0, 200)}...`);
          });
        } else {
          console.log(`‚úÖ ${colecao}: Cole√ß√£o vazia ou n√£o existe`);
        }
      } catch (error) {
        console.log(`‚ùå ${colecao}: Erro ao acessar`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar cole√ß√µes:', error.message);
  }
}

verificarColecoesFirebase();